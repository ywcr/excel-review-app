// 基于真实模板创建正确的测试Excel文件
const XLSX = require('xlsx');
const path = require('path');
const fs = require('fs');

// 确保测试文件目录存在
const testDir = path.join(__dirname, '../public/test-files');
if (!fs.existsSync(testDir)) {
  fs.mkdirSync(testDir, { recursive: true });
}

// 1. 创建药店拜访测试文件 - 正确格式（基于真实模板）
function createPharmacyVisitValid() {
  const data = [
    ['序号', '任务标题', '实施人', '对接人', '零售渠道', '渠道地址', '拜访开始时间', '拜访时长', '拜访事项（1）', '信息反馈（1）', '拜访事项（2）', '信息反馈（2）', '门头', '内部'],
    [1, '某公司产品北京市药店拜访', '张三', '王经理', '康美药店', '北京市朝阳区建国路1号', '2024-01-15 09:00', 90, '产品推广', '客户反馈良好', '价格咨询', '价格合理', '已拍摄', '已拍摄'],
    [2, '某公司产品北京市药店拜访', '李四', '李经理', '同仁堂药店', '北京市西城区前门大街2号', '2024-01-15 11:00', 60, '产品介绍', '有购买意向', '库存了解', '库存充足', '已拍摄', '已拍摄'],
    [3, '某公司产品北京市药店拜访', '张三', '赵经理', '老百姓药店', '北京市海淀区中关村大街3号', '2024-01-16 14:00', 90, '市场调研', '竞品分析', '销售策略', '制定方案', '已拍摄', '已拍摄'],
    [4, '某公司产品北京市药店拜访', '王五', '陈经理', '益丰药房', '北京市东城区王府井大街4号', '2024-01-16 10:00', 75, '客户维护', '关系良好', '后续合作', '达成意向', '已拍摄', '已拍摄'],
    [5, '某公司产品北京市药店拜访', '李四', '刘经理', '大参林药店', '北京市丰台区南三环路5号', '2024-01-17 09:30', 90, '新品推介', '接受度高', '订单洽谈', '签订合同', '已拍摄', '已拍摄']
  ];

  const ws = XLSX.utils.aoa_to_sheet(data);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, '药店拜访');
  
  const filePath = path.join(testDir, '药店拜访_正确格式_新.xlsx');
  XLSX.writeFile(wb, filePath);
  console.log('✅ 创建成功:', filePath);
}

// 2. 创建药店拜访测试文件 - 包含各种错误（基于真实模板）
function createPharmacyVisitWithErrors() {
  const data = [
    ['序号', '任务标题', '实施人', '对接人', '零售渠道', '渠道地址', '拜访开始时间', '拜访时长', '拜访事项（1）', '信息反馈（1）', '拜访事项（2）', '信息反馈（2）', '门头', '内部'],
    [1, '某公司产品北京市药店拜访', '', '王经理', '康美药店', '北京市朝阳区建国路1号', '2024-01-15 09:00', 90, '产品推广', '客户反馈良好', '价格咨询', '价格合理', '已拍摄', '已拍摄'], // 缺少实施人
    [2, '某公司产品北京市药店拜访', '李四', '李经理', '', '北京市西城区前门大街2号', '2024-01-15 11:00', 60, '产品介绍', '有购买意向', '库存了解', '库存充足', '已拍摄', '已拍摄'], // 缺少零售渠道
    [3, '某公司产品北京市药店拜访', '张三', '赵经理', '老百姓药店', '北京市海淀区中关村大街3号', '无效日期', 90, '市场调研', '竞品分析', '销售策略', '制定方案', '已拍摄', '已拍摄'], // 日期格式错误
    [4, '某公司产品北京市药店拜访', '张三', '王经理', '康美药店', '北京市朝阳区建国路1号', '2024-01-15 10:00', 30, '客户维护', '关系良好', '后续合作', '达成意向', '已拍摄', '已拍摄'], // 重复药店 + 时长不足60分钟
    [5, '某公司产品北京市药店拜访', '王五', '陈经理', '益丰药房', '北京市东城区王府井大街4号', '2024-01-16 07:00', 60, '新品推介', '接受度高', '订单洽谈', '签订合同', '已拍摄', '已拍摄'], // 时间范围错误（07:00）
    [6, '某公司产品北京市药店拜访', '张三', '刘经理', '大参林药店', '北京市丰台区南三环路5号', '2024-01-16 10:00', 60, '产品推广', '效果良好', '价格谈判', '达成一致', '已拍摄', '已拍摄'], // 张三当天第6家店（超频次）
    [7, '某公司产品北京市药店拜访', '张三', '孙经理', '海王星辰', '北京市石景山区八角路6号', '2024-01-16 12:00', 60, '市场拓展', '有合作意向', '后续跟进', '制定计划', '已拍摄', '已拍摄'],
    [8, '某公司产品北京市药店拜访', '张三', '周经理', '华氏大药房', '北京市门头沟区新桥路7号', '2024-01-16 14:00', 60, '客户服务', '满意度高', '产品反馈', '质量认可', '已拍摄', '已拍摄'],
    [9, '某公司产品北京市药店拜访', '张三', '吴经理', '健之佳', '北京市房山区良乡路8号', '2024-01-16 16:00', 60, '业务洽谈', '进展顺利', '合作细节', '敲定方案', '已拍摄', '已拍摄'],
    [10, '某公司产品北京市药店拜访', '李四', '王经理', '一心堂', '北京市大兴区黄村路9号', '2024-01-20 09:00', 60, '回访客户', '关系维护', '后续合作', '继续推进', '已拍摄', '已拍摄'], // 同一对接人7日内重复
  ];

  const ws = XLSX.utils.aoa_to_sheet(data);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, '药店拜访');
  
  const filePath = path.join(testDir, '药店拜访_包含错误_新.xlsx');
  XLSX.writeFile(wb, filePath);
  console.log('✅ 创建成功:', filePath);
}

// 3. 创建医院拜访测试文件 - 正确格式（基于真实模板）
function createHospitalVisitValid() {
  const data = [
    ['序号', '任务标题', '实施人', '医生姓名', '医疗机构名称', '医疗类型', '渠道地址', '科室', '拜访开始时间', '拜访时长', '拜访事项（1）', '信息反馈（1）', '拜访事项（2）', '信息反馈（2）', '医院门头照', '内部照片'],
    [1, '某公司产品北京市医院拜访', '李代表', '张医生', '北京协和医院', '三级甲等', '北京市东城区东单北大街1号', '心内科', '2024-01-15 09:00', 60, '产品介绍', '医生感兴趣', '临床应用', '效果良好', '已拍摄', '已拍摄'],
    [2, '某公司产品北京市医院拜访', '王代表', '王医生', '上海华山医院', '三级甲等', '上海市静安区乌鲁木齐中路12号', '神经内科', '2024-01-15 14:00', 60, '学术交流', '专业认可', '合作意向', '达成共识', '已拍摄', '已拍摄'],
    [3, '某公司产品北京市医院拜访', '李代表', '李医生', '广州中山医院', '三级乙等', '广州市越秀区中山二路74号', '骨科', '2024-01-16 10:00', 60, '病例讨论', '治疗方案', '后续跟进', '制定计划', '已拍摄', '已拍摄'],
    [4, '某公司产品北京市医院拜访', '张代表', '赵医生', '深圳人民医院', '二级甲等', '深圳市罗湖区东门北路1017号', '儿科', '2024-01-17 09:00', 60, '产品培训', '操作指导', '使用反馈', '满意度高', '已拍摄', '已拍摄']
  ];

  const ws = XLSX.utils.aoa_to_sheet(data);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, '医院拜访');
  
  const filePath = path.join(testDir, '医院拜访_正确格式_新.xlsx');
  XLSX.writeFile(wb, filePath);
  console.log('✅ 创建成功:', filePath);
}

// 4. 创建医院拜访测试文件 - 包含错误（基于真实模板）
function createHospitalVisitWithErrors() {
  const data = [
    ['序号', '任务标题', '实施人', '医生姓名', '医疗机构名称', '医疗类型', '渠道地址', '科室', '拜访开始时间', '拜访时长', '拜访事项（1）', '信息反馈（1）', '拜访事项（2）', '信息反馈（2）', '医院门头照', '内部照片'],
    [1, '某公司产品北京市医院拜访', '李代表', '', '北京协和医院', '三级甲等', '北京市东城区东单北大街1号', '心内科', '2024-01-15 09:00', 60, '产品介绍', '医生感兴趣', '临床应用', '效果良好', '已拍摄', '已拍摄'], // 缺少医生姓名
    [2, '某公司产品北京市医院拜访', '王代表', '王医生', '', '三级甲等', '上海市静安区乌鲁木齐中路12号', '神经内科', '2024-01-15 14:00', 60, '学术交流', '专业认可', '合作意向', '达成共识', '已拍摄', '已拍摄'], // 缺少医院名称
    [3, '某公司产品北京市医院拜访', '李代表', '李医生', '广州中山医院', '普通医院', '广州市越秀区中山二路74号', '骨科', '2024-01-16 10:00', 60, '病例讨论', '治疗方案', '后续跟进', '制定计划', '已拍摄', '已拍摄'], // 医疗类型错误
    [4, '某公司产品北京市医院拜访', '张代表', '赵医生', '北京协和医院', '三级甲等', '北京市东城区东单北大街1号', '儿科', '2024-01-15 11:00', 60, '产品培训', '操作指导', '使用反馈', '满意度高', '已拍摄', '已拍摄'], // 重复医院
    [5, '某公司产品北京市医院拜访', '李代表', '孙医生', '上海华山医院', '三级甲等', '上海市静安区乌鲁木齐中路12号', '内科', '2024-01-16 09:00', 60, '学术研讨', '深入交流', '合作探讨', '前景良好', '已拍摄', '已拍摄'], // 李代表当天第5家医院（超频次）
    [6, '某公司产品北京市医院拜访', '李代表', '周医生', '天津医院', '三级甲等', '天津市和平区南京路1号', '外科', '2024-01-16 11:00', 60, '技术交流', '专业讨论', '应用推广', '效果显著', '已拍摄', '已拍摄'],
    [7, '某公司产品北京市医院拜访', '李代表', '吴医生', '重庆医院', '三级甲等', '重庆市渝中区中山路2号', '妇科', '2024-01-16 14:00', 60, '临床指导', '操作培训', '疗效评估', '结果理想', '已拍摄', '已拍摄'],
    [8, '某公司产品北京市医院拜访', '李代表', '郑医生', '成都医院', '三级甲等', '成都市锦江区春熙路3号', '眼科', '2024-01-16 16:00', 60, '病例分享', '经验交流', '技术提升', '收获颇丰', '已拍摄', '已拍摄'],
    [9, '某公司产品北京市医院拜访', '王代表', '张医生', '西安医院', '三级甲等', '西安市雁塔区小寨路4号', '耳鼻喉科', '2024-01-20 09:00', 60, '回访医生', '关系维护', '后续合作', '继续推进', '已拍摄', '已拍摄'], // 张医生7日内重复
  ];

  const ws = XLSX.utils.aoa_to_sheet(data);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, '医院拜访');
  
  const filePath = path.join(testDir, '医院拜访_包含错误_新.xlsx');
  XLSX.writeFile(wb, filePath);
  console.log('✅ 创建成功:', filePath);
}

// 5. 创建科室拜访测试文件（基于真实模板）
function createDepartmentVisit() {
  const data = [
    ['序号', '任务标题', '实施人', '医生姓名', '医疗机构名称', '渠道地址', '科室', '拜访开始时间', '拜访时长', '拜访事项（1）', '信息反馈（1）', '拜访事项（2）', '信息反馈（2）', '医院门头照', '科室照片'],
    [1, '某公司产品北京市医院拜访', '张代表', '李医生', '北京协和医院', '北京市东城区东单北大街1号', '心内科', '2024-01-15 09:00', 45, '科室介绍', '了解科室情况', '合作洽谈', '初步意向', '已拍摄', '已拍摄'], // 时长不足60分钟
    [2, '某公司产品北京市医院拜访', '王代表', '王医生', '上海华山医院', '上海市静安区乌鲁木齐中路12号', '神经内科', '2024-01-15 14:00', 60, '学术交流', '专业认可', '技术分享', '效果良好', '已拍摄', '已拍摄'],
    [3, '某公司产品北京市医院拜访', '', '赵医生', '广州中山医院', '广州市越秀区中山二路74号', '骨科', '2024-01-16 10:00', 30, '产品演示', '操作简便', '应用指导', '易于掌握', '已拍摄', '已拍摄'], // 缺少实施人 + 时长不足
    [4, '某公司产品北京市医院拜访', '李代表', '孙医生', '深圳人民医院', '深圳市罗湖区东门北路1017号', '', '2024-01-17 09:00', 35, '科室调研', '需求了解', '方案制定', '针对性强', '已拍摄', '已拍摄'], // 缺少科室 + 时长不足
    [5, '某公司产品北京市医院拜访', '张代表', '周医生', '天津医院', '天津市和平区南京路1号', '儿科', '2024-01-17 15:00', 60, '培训指导', '技能提升', '质量改进', '成效显著', '已拍摄', '已拍摄']
  ];

  const ws = XLSX.utils.aoa_to_sheet(data);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, '科室拜访');
  
  const filePath = path.join(testDir, '科室拜访_测试_新.xlsx');
  XLSX.writeFile(wb, filePath);
  console.log('✅ 创建成功:', filePath);
}

// 6. 创建表头错误的测试文件
function createHeaderErrorFile() {
  const data = [
    ['药店名称', '销售代表', '开始时间', '结束时间'], // 表头不匹配
    ['康美药店', '张三', '2024-01-15 09:00', '2024-01-15 10:30'],
    ['同仁堂药店', '李四', '2024-01-15 11:00', '2024-01-15 12:00']
  ];

  const ws = XLSX.utils.aoa_to_sheet(data);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');
  
  const filePath = path.join(testDir, '药店拜访_表头错误_新.xlsx');
  XLSX.writeFile(wb, filePath);
  console.log('✅ 创建成功:', filePath);
}

// 创建测试说明文件
function createTestGuide() {
  const guide = `# 基于真实模板的Excel验证测试文件说明

## 真实模板字段结构

### 药店拜访模板字段：
1. 序号
2. 任务标题  
3. 实施人 ⭐ (必填)
4. 对接人
5. 零售渠道 ⭐ (必填)
6. 渠道地址
7. 拜访开始时间 ⭐ (必填，日期时间格式)
8. 拜访时长 ⭐ (必填，数值，最少60分钟)
9. 拜访事项（1）
10. 信息反馈（1）
11. 拜访事项（2）
12. 信息反馈（2）
13. 门头
14. 内部

### 医院拜访模板字段：
1. 序号
2. 任务标题
3. 实施人 ⭐ (必填)
4. 医生姓名 ⭐ (必填)
5. 医疗机构名称 ⭐ (必填)
6. 医疗类型 ⭐ (必填，枚举：一级/二级/三级 + 甲等/乙等等)
7. 渠道地址
8. 科室
9. 拜访开始时间 ⭐ (必填，日期时间格式)
10. 拜访时长 ⭐ (必填，数值，最少60分钟)
11. 拜访事项（1）
12. 信息反馈（1）
13. 拜访事项（2）
14. 信息反馈（2）
15. 医院门头照
16. 内部照片

### 科室拜访模板字段：
1. 序号
2. 任务标题
3. 实施人 ⭐ (必填)
4. 医生姓名 ⭐ (必填)
5. 医疗机构名称 ⭐ (必填)
6. 渠道地址
7. 科室 ⭐ (必填)
8. 拜访开始时间 ⭐ (必填，日期时间格式)
9. 拜访时长 ⭐ (必填，数值，最少30分钟)
10. 拜访事项（1）
11. 信息反馈（1）
12. 拜访事项（2）
13. 信息反馈（2）
14. 医院门头照
15. 科室照片

## 测试文件列表

### 1. 药店拜访_正确格式_新.xlsx
- **用途**: 验证正确格式的药店拜访数据
- **预期结果**: ✅ 验证通过，无错误
- **包含数据**: 5条正确的药店拜访记录

### 2. 药店拜访_包含错误_新.xlsx  
- **用途**: 测试各种验证规则的错误检测
- **预期错误**:
  - 第2行：实施人不能为空
  - 第3行：零售渠道不能为空
  - 第4行：拜访开始时间格式不正确
  - 第5行：同一零售渠道1日内不能重复拜访 + 拜访时长不足60分钟
  - 第6行：拜访时间必须在08:00-19:00范围内
  - 第7-10行：同一实施人每日拜访不超过5家药店
  - 第11行：同一对接人7日内不能重复拜访

### 3. 医院拜访_正确格式_新.xlsx
- **用途**: 验证正确格式的医院拜访数据
- **预期结果**: ✅ 验证通过，无错误
- **包含数据**: 4条正确的医院拜访记录

### 4. 医院拜访_包含错误_新.xlsx
- **用途**: 测试医院拜访的各种错误
- **预期错误**:
  - 第2行：医生姓名不能为空
  - 第3行：医疗机构名称不能为空
  - 第4行：医疗类型必须填写具体级别
  - 第5行：同一医院1日内不能重复拜访
  - 第6-9行：同一实施人每日拜访不超过4家医院
  - 第10行：同一医生7日内不能重复拜访

### 5. 科室拜访_测试_新.xlsx
- **用途**: 测试科室拜访验证
- **预期错误**:
  - 第2行：拜访时长不足60分钟（科室拜访最少30分钟，但系统可能设为60分钟）
  - 第4行：实施人不能为空 + 拜访时长不足
  - 第5行：科室不能为空 + 拜访时长不足

### 6. 药店拜访_表头错误_新.xlsx
- **用途**: 测试表头验证功能
- **预期结果**: ❌ 表头验证失败，提示字段不匹配
- **错误类型**: 表头字段名不符合模板要求

## 重要提醒

⚠️ **请确保验证规则与真实模板字段对应**：
- 代码中的字段映射需要更新为真实模板的字段名
- 验证规则需要基于真实的业务需求调整
- 必填字段、数据类型、取值范围等都需要与模板保持一致

## 下一步行动

1. **更新验证规则配置** - 修改 \`src/lib/validationRules.ts\` 中的字段映射
2. **测试验证功能** - 使用新的测试文件验证前端功能
3. **对比服务端验证** - 确保前后端验证结果一致
`;

  const guidePath = path.join(testDir, 'README_新模板.md');
  fs.writeFileSync(guidePath, guide, 'utf8');
  console.log('✅ 创建测试说明:', guidePath);
}

// 执行所有创建函数
console.log('🚀 开始创建基于真实模板的测试Excel文件...\n');

createPharmacyVisitValid();
createPharmacyVisitWithErrors();
createHospitalVisitValid();
createHospitalVisitWithErrors();
createDepartmentVisit();
createHeaderErrorFile();
createTestGuide();

console.log('\n✅ 所有基于真实模板的测试文件创建完成！');
console.log('📁 文件位置:', testDir);
console.log('\n⚠️  重要提醒：需要更新验证规则配置以匹配真实模板字段！');
